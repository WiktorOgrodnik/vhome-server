//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0

use super::sea_orm_active_enums::TokenType;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "tokens")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub vuser_id: Option<i32>,
    #[sea_orm(column_type = "Text")]
    pub token: String,
    pub token_t: TokenType,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::pairing_codes::Entity")]
    PairingCodes,
    #[sea_orm(
        belongs_to = "super::vuser::Entity",
        from = "Column::VuserId",
        to = "super::vuser::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Vuser,
}

impl Related<super::pairing_codes::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PairingCodes.def()
    }
}

impl Related<super::vuser::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Vuser.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
